name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

env:
  DAGGER_VERSION: "0.9.5"

jobs:
  test:
    name: Test Suite
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Dagger CLI
        run: |
          cd /tmp
          curl -L https://dl.dagger.io/dagger/install.sh | DAGGER_VERSION=${{ env.DAGGER_VERSION }} sh
          sudo mv bin/dagger /usr/local/bin
          dagger version

      - name: Run unit tests
        run: dagger call test --markers="unit"

      - name: Run integration tests
        run: dagger call test --markers="integration"

      - name: Upload coverage reports
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          flags: unittests
          name: codecov-umbrella

  lint:
    name: Code Quality
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Dagger CLI
        run: |
          cd /tmp
          curl -L https://dl.dagger.io/dagger/install.sh | DAGGER_VERSION=${{ env.DAGGER_VERSION }} sh
          sudo mv bin/dagger /usr/local/bin

      - name: Run linting
        run: dagger call lint

      - name: Run type checking
        run: dagger call type-check

  security:
    name: Security Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Dagger CLI
        run: |
          cd /tmp
          curl -L https://dl.dagger.io/dagger/install.sh | DAGGER_VERSION=${{ env.DAGGER_VERSION }} sh
          sudo mv bin/dagger /usr/local/bin

      - name: Run security scans
        run: dagger call security-scan

      - name: Upload security results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: security-results
          path: security-scan-results.json

  build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs: [test, lint, security]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Dagger CLI
        run: |
          cd /tmp
          curl -L https://dl.dagger.io/dagger/install.sh | DAGGER_VERSION=${{ env.DAGGER_VERSION }} sh
          sudo mv bin/dagger /usr/local/bin

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        run: |
          VERSION=$(git describe --tags --always)
          dagger call build-production-image --tag="aideator:${VERSION}"
          dagger call build-production-image --tag="aideator:latest"

  e2e:
    name: E2E Tests
    runs-on: ubuntu-latest
    needs: [test, lint]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Dagger CLI
        run: |
          cd /tmp
          curl -L https://dl.dagger.io/dagger/install.sh | DAGGER_VERSION=${{ env.DAGGER_VERSION }} sh
          sudo mv bin/dagger /usr/local/bin

      - name: Run E2E tests
        run: dagger call e2e-test
        env:
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}

  deploy:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: [build, e2e]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    environment: production
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy to production
        run: |
          echo "Deployment steps would go here"
          # Example: kubectl apply -f k8s/
          # Example: aws ecs update-service ...
          # Example: gcloud run deploy ...