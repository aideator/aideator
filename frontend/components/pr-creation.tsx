"use client"

import { useState } from "react"
import { Github, RefreshCw, ExternalLink, AlertTriangle, CheckCircle } from "lucide-react"
import { Button } from "@/components/ui/button"
import { Input } from "@/components/ui/input"
import { Textarea } from "@/components/ui/textarea"
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card"
import { Badge } from "@/components/ui/badge"
import { useAuth } from "@/components/auth/auth-provider"
import DiffViewer from "@/components/diff-viewer"

interface PRCreationProps {
  taskId: string
  variationId: number
  summary?: string
  diffContent?: string
  changedFiles: Array<{
    name: string
    additions: number
    deletions: number
  }>
  githubUrl?: string
}

export function PRCreation({
  taskId,
  variationId,
  summary,
  diffContent,
  changedFiles,
  githubUrl
}: PRCreationProps) {
  const { token } = useAuth()
  const [isCreating, setIsCreating] = useState(false)
  const [isCreated, setIsCreated] = useState(false)
  const [prUrl, setPrUrl] = useState<string | null>(null)
  const [error, setError] = useState<string | null>(null)
  const [prTitle, setPrTitle] = useState(`AIdeator â€“ Task ${taskId} Variation ${variationId + 1}`)
  const [prDescription, setPrDescription] = useState(summary || "Automated changes generated by AIdeator.")

  const handleCreatePR = async () => {
    if (!token) {
      setError("Authentication required")
      return
    }

    if (!githubUrl) {
      setError("No GitHub repository associated with this task")
      return
    }

    if (!diffContent) {
      setError("No changes available to create a pull request")
      return
    }

    try {
      setIsCreating(true)
      setError(null)

      const response = await fetch(
        `http://localhost:8000/api/v1/tasks/${taskId}/variations/${variationId}/pull-request`,
        {
          method: "POST",
          headers: {
            "Authorization": `Bearer ${token}`,
            "Content-Type": "application/json",
          },
          body: JSON.stringify({
            title: prTitle,
            description: prDescription,
          }),
        }
      )

      if (!response.ok) {
        const errorText = await response.text()
        throw new Error(`Failed to create PR: ${errorText}`)
      }

      const data: { pr_url: string } = await response.json()
      setPrUrl(data.pr_url)
      setIsCreated(true)
    } catch (err) {
      console.error("PR creation error:", err)
      setError(err instanceof Error ? err.message : "Failed to create PR")
    } finally {
      setIsCreating(false)
    }
  }

  const handleViewPR = () => {
    if (prUrl) {
      window.open(prUrl, "_blank")
    }
  }

  if (isCreated && prUrl) {
    return (
      <Card className="bg-gray-900/50 border-green-700/50">
        <CardHeader>
          <div className="flex items-center gap-2">
            <CheckCircle className="w-5 h-5 text-green-400" />
            <CardTitle className="text-green-300">Pull Request Created</CardTitle>
          </div>
          <CardDescription className="text-gray-400">
            Your pull request has been successfully created on GitHub
          </CardDescription>
        </CardHeader>
        <CardContent className="space-y-4">
          <div className="flex items-center gap-2">
            <Badge variant="outline" className="bg-green-900/30 border-green-700 text-green-300">
              Ready to Review
            </Badge>
            <span className="text-sm text-gray-400">
              {changedFiles.length} file{changedFiles.length !== 1 ? 's' : ''} changed
            </span>
          </div>
          <div className="flex gap-2">
            <Button onClick={handleViewPR} className="bg-green-600 hover:bg-green-700">
              <ExternalLink className="w-4 h-4 mr-2" />
              View on GitHub
            </Button>
            <Button 
              variant="outline" 
              onClick={() => {
                setIsCreated(false)
                setPrUrl(null)
                setError(null)
              }}
            >
              Create Another PR
            </Button>
          </div>
        </CardContent>
      </Card>
    )
  }

  // Check if we have the required data
  const hasRequiredData = githubUrl && diffContent && changedFiles.length > 0

  return (
    <Card className="bg-gray-900/50 border-gray-700/50">
      <CardHeader>
        <div className="flex items-center gap-2">
          <Github className="w-5 h-5 text-gray-300" />
          <CardTitle>Create Pull Request</CardTitle>
        </div>
        <CardDescription className="text-gray-400">
          Create a GitHub pull request with the changes from this variation
        </CardDescription>
      </CardHeader>
      <CardContent className="space-y-4">
        {error && (
          <div className="flex items-center gap-2 p-3 bg-red-950/50 border border-red-800 rounded-md">
            <AlertTriangle className="w-4 h-4 text-red-400" />
            <span className="text-red-300 text-sm">{error}</span>
          </div>
        )}

        {githubUrl && (
          <div className="text-sm text-gray-400">
            Repository: <span className="text-cyan-300">{githubUrl}</span>
          </div>
        )}

        <div className="space-y-2">
          <label className="text-sm font-medium text-gray-300">PR Title</label>
          <Input
            value={prTitle}
            onChange={(e) => setPrTitle(e.target.value)}
            className="bg-gray-800 border-gray-700 text-gray-200"
            placeholder="Enter pull request title"
          />
        </div>

        <div className="space-y-2">
          <label className="text-sm font-medium text-gray-300">PR Description</label>
          <Textarea
            value={prDescription}
            onChange={(e) => setPrDescription(e.target.value)}
            className="bg-gray-800 border-gray-700 text-gray-200 min-h-[100px]"
            placeholder="Enter pull request description"
          />
        </div>

        {changedFiles.length > 0 && (
          <div className="space-y-2">
            <label className="text-sm font-medium text-gray-300">Files to be changed</label>
            <div className="bg-gray-800/50 border border-gray-700 rounded-md p-3">
              <div className="space-y-1">
                {changedFiles.map((file) => (
                  <div key={file.name} className="flex justify-between items-center text-sm">
                    <span className="text-cyan-300">{file.name}</span>
                    <div className="font-mono text-xs">
                      <span className="text-green-400">+{file.additions}</span>{" "}
                      <span className="text-red-400">-{file.deletions}</span>
                    </div>
                  </div>
                ))}
              </div>
            </div>
          </div>
        )}

        {diffContent && (
          <div className="space-y-2">
            <label className="text-sm font-medium text-gray-300">Preview Changes</label>
            <div className="bg-gray-800/50 border border-gray-700 rounded-md overflow-hidden">
              <DiffViewer xmlData={diffContent} />
            </div>
          </div>
        )}

        <Button
          onClick={handleCreatePR}
          disabled={isCreating || !token || !hasRequiredData}
          className="w-full bg-green-600 hover:bg-green-700 disabled:bg-gray-700"
        >
          {isCreating ? (
            <>
              <RefreshCw className="w-4 h-4 mr-2 animate-spin" />
              Creating PR...
            </>
          ) : (
            <>
              <Github className="w-4 h-4 mr-2" />
              Create Pull Request
            </>
          )}
        </Button>

        {!token && (
          <div className="text-center text-sm text-gray-400">
            Please log in with GitHub to create pull requests
          </div>
        )}

        {!hasRequiredData && (
          <div className="text-center text-sm text-gray-400">
            {!githubUrl && "No GitHub repository associated with this task"}
            {!diffContent && "No changes available to create a pull request"}
            {changedFiles.length === 0 && "No files have been modified"}
          </div>
        )}
      </CardContent>
    </Card>
  )
}