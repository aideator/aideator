"""Add archived field to tasks table

Revision ID: cf94a9256bdb
Revises: c6deba72bbcc
Create Date: 2025-07-17 06:56:41.675265

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'cf94a9256bdb'
down_revision: Union[str, None] = 'c6deba72bbcc'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Check if runs table exists before trying to drop it
    connection = op.get_bind()
    inspector = sa.inspect(connection)
    existing_tables = inspector.get_table_names()
    
    if 'runs' in existing_tables:
        # Only drop indexes and table if they exist
        existing_indexes = inspector.get_indexes('runs')
        index_names = [idx['name'] for idx in existing_indexes]
        
        if 'ix_runs_created_at' in index_names:
            op.drop_index(op.f('ix_runs_created_at'), table_name='runs')
        if 'ix_runs_github_url' in index_names:
            op.drop_index(op.f('ix_runs_github_url'), table_name='runs')
        if 'ix_runs_run_id' in index_names:
            op.drop_index(op.f('ix_runs_run_id'), table_name='runs')
        if 'ix_runs_status' in index_names:
            op.drop_index(op.f('ix_runs_status'), table_name='runs')
        if 'ix_runs_task_status' in index_names:
            op.drop_index(op.f('ix_runs_task_status'), table_name='runs')
        if 'ix_runs_user_id' in index_names:
            op.drop_index(op.f('ix_runs_user_id'), table_name='runs')
        
        op.drop_table('runs')
    
    # Add archived column to tasks table if it doesn't exist
    existing_columns = [col['name'] for col in inspector.get_columns('tasks')]
    if 'archived' not in existing_columns:
        op.add_column('tasks', sa.Column('archived', sa.Boolean(), nullable=False, server_default='false'))
        op.create_index(op.f('ix_tasks_archived'), 'tasks', ['archived'], unique=False)
    
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_tasks_archived'), table_name='tasks')
    op.drop_column('tasks', 'archived')
    op.create_table('runs',
    sa.Column('task_id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('run_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('github_url', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('prompt', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('variations', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('status', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('task_status', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('started_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('completed_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('agent_config', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('metadata', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('results', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('error_message', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('total_tokens_used', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('total_cost_usd', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('task_id', name=op.f('runs_pkey'))
    )
    op.create_index(op.f('ix_runs_user_id'), 'runs', ['user_id'], unique=False)
    op.create_index(op.f('ix_runs_task_status'), 'runs', ['task_status'], unique=False)
    op.create_index(op.f('ix_runs_status'), 'runs', ['status'], unique=False)
    op.create_index(op.f('ix_runs_run_id'), 'runs', ['run_id'], unique=True)
    op.create_index(op.f('ix_runs_github_url'), 'runs', ['github_url'], unique=False)
    op.create_index(op.f('ix_runs_created_at'), 'runs', ['created_at'], unique=False)
    # ### end Alembic commands ###