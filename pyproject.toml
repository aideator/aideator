[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["app"]

[project]
name = "aideator"
version = "0.1.0"
description = "Dagger-powered LLM orchestration platform"
requires-python = ">=3.11"
dependencies = [
    "fastapi>=0.104.0",
    "uvicorn[standard]>=0.24.0",
    "sqlmodel>=0.0.14",
    "aiosqlite>=0.19.0",
    "httpx>=0.25.0",
    "anthropic>=0.18.0",
    "pydantic-settings>=2.0.0",
    "email-validator>=2.0.0",
    "python-multipart>=0.0.6",
    "sse-starlette>=2.0.0",
    "structlog>=23.0.0",
    "python-jose[cryptography]>=3.3.0",
    "passlib[bcrypt]>=1.7.4",
    "alembic>=1.13.0",
    "redis>=5.0.0",
    "tenacity>=8.2.0",
    "prometheus-client>=0.19.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.12.0",
    "pytest-timeout>=2.2.0",
    "mypy>=1.7.0",
    "ruff>=0.1.0",
    "httpx>=0.25.0",
    "hypothesis>=6.90.0",
    "faker>=20.0.0",
    "pytest-benchmark>=4.0.0",
    "pytest-xdist>=3.5.0",
    "playwright>=1.40.0",
    "bandit>=1.7.5",
    "safety>=3.0.0",
    "semgrep>=1.45.0",
]

[tool.ruff]
target-version = "py311"
line-length = 88
fix = true
select = [
    "E",    # pycodestyle errors
    "W",    # pycodestyle warnings
    "F",    # pyflakes
    "I",    # isort
    "B",    # flake8-bugbear
    "C4",   # flake8-comprehensions
    "UP",   # pyupgrade
    "ARG",  # flake8-unused-arguments
    "SIM",  # flake8-simplify
    "TCH",  # flake8-type-checking
    "DTZ",  # flake8-datetimez
    "ICN",  # flake8-import-conventions
    "PIE",  # flake8-pie
    "PT",   # flake8-pytest-style
    "Q",    # flake8-quotes
    "RET",  # flake8-return
    "RUF",  # Ruff-specific rules
    "S",    # flake8-bandit
    "T10",  # flake8-debugger
    "TID",  # flake8-tidy-imports
    "INT",  # flake8-gettext
    "PTH",  # flake8-use-pathlib
    "PD",   # pandas-vet
    "PGH",  # pygrep-hooks
    "PL",   # Pylint
    "FLY",  # flynt
    "NPY",  # NumPy-specific rules
    "PERF", # Perflint
]
ignore = [
    "E501",  # line too long (handled by formatter)
    "B008",  # do not perform function calls in argument defaults (FastAPI Depends)
    "S101",  # use of assert (needed for tests)
    "PLR0913", # too many arguments
]

[tool.ruff.per-file-ignores]
"tests/*" = ["S101", "S106", "ARG001", "ARG002"]
"scripts/*" = ["T201"]

[tool.ruff.isort]
known-first-party = ["app"]

[tool.mypy]
python_version = "3.11"
strict = true
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
plugins = ["pydantic.mypy", "sqlalchemy.ext.mypy.plugin"]

[[tool.mypy.overrides]]
module = "tests.*"
ignore_errors = true

[[tool.mypy.overrides]]
module = ["dagger.*", "sse_starlette.*", "prometheus_client.*"]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
testpaths = ["tests"]
asyncio_mode = "auto"
addopts = [
    "--strict-markers",
    "--tb=short",
    "--cov=app",
    "--cov-branch",
    "--cov-report=term-missing:skip-covered",
    "--cov-fail-under=80",
    "--cov-report=html",
    "--cov-report=xml",
    "-v",
    "--disable-warnings",
    "--timeout=300",
]
markers = [
    "unit: Unit tests (fast)",
    "integration: Integration tests (slower)",
    "e2e: End-to-end tests (slowest)",
    "slow: Slow tests",
]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
]

[tool.coverage.run]
source = ["app"]
omit = [
    "*/tests/*",
    "*/migrations/*",
    "*/__init__.py",
    "*/conftest.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if __name__ == .__main__.:",
    "raise NotImplementedError",
    "if TYPE_CHECKING:",
    "if typing.TYPE_CHECKING:",
    "except ImportError:",
    "pass",
]

[tool.bandit]
exclude_dirs = ["tests", "scripts"]
skips = ["B101", "B601"]

[tool.black]
target-version = ["py311"]
line-length = 88

[tool.isort]
profile = "black"
line_length = 88