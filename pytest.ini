[pytest]
# Test discovery
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*
testpaths = tests

# Asyncio configuration
asyncio_mode = auto
asyncio_default_fixture_loop_scope = session

# Markers
markers =
    unit: Unit tests
    integration: Integration tests
    e2e: End-to-end tests
    slow: Slow tests
    embedded_postgres: Tests using embedded PostgreSQL

# Embedded PostgreSQL configuration for ultra-fast testing
# Use tmpfs for in-memory database storage
postgresql_unixsocketdir = /tmp
postgresql_startparams = -w -t 30

# Ultra-fast PostgreSQL options (optimized for testing)
postgresql_postgres_options = -F -c shared_buffers=128MB -c fsync=off -c synchronous_commit=off -c full_page_writes=off -c checkpoint_segments=32 -c checkpoint_completion_target=0.9 -c wal_buffers=16MB -c effective_cache_size=256MB -c work_mem=8MB -c maintenance_work_mem=64MB -c random_page_cost=1.0 -c log_statement=none -c log_min_duration_statement=-1

# Test timeout (5 minutes)
timeout = 300

# Coverage configuration
addopts = 
    --strict-markers
    --strict-config
    --tb=short
    --maxfail=10
    --durations=20
    --cov-report=term-missing
    --cov-report=html:htmlcov
    --cov-report=xml:coverage.xml
    --cov=app

# Filter warnings
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::UserWarning:aiohttp
    ignore::RuntimeWarning:asyncio
    ignore::ResourceWarning
    ignore::pytest.PytestUnraisableExceptionWarning

# Logging
log_cli = false
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Pytest-xdist configuration for parallel testing
# Note: parallel testing config merged into main addopts above